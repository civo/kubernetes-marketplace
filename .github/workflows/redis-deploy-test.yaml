name: Redis Deploy and Test

on:
  pull_request:
    types: [labeled]

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    environment: Test
    container:
      image: ubuntu:latest
    if: contains(github.event.pull_request.labels.*.name, 'ready-to-test')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install curl
        run: apt-get update && apt-get install -y curl

      - name: Download Civo CLI
        run: curl -sL https://civo.com/get | sh

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Create Civo Kubernetes cluster
        env:
          CIVO_API_KEY: ${{ secrets.CIVO_API_KEY }}
        run: |
          CIVO_API_KEY_NAME=test civo apikey save --load-from-env 
          civo apikey use test
          export PATH=$PATH:/root/.civo/bin
          civo kubernetes create test-cluster --wait --save --merge --switch

      - name: Install Redis
        run: |
          kubectl apply -f redis/app.yaml

      - name: Get REDIS_PASS from Kubernetes secret
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          REDIS_PASS=$(kubectl get secret redis -o jsonpath='{.data.REDIS_PASS}' | base64 --decode)
          echo "REDIS_PASS=$REDIS_PASS" >> $GITHUB_ENV

      - name: Port-forward to Redis service
        run: |
          kubectl port-forward svc/redis 6379:6379 &
          sleep 5

      - name: Run conformance test
        run: |
          timeout 300 bash -c 'cd redis && bash conformance.sh'
        continue-on-error: true
        id: conformance-test

      - name: Remove ready-to-test label on failure
        if: steps.conformance-test.outcome == 'failure'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X DELETE \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${GITHUB_REF##*/}/labels/ready-to-test

      - name: Delete Civo Kubernetes cluster
        if: always()
        env:
          CIVO_API_KEY: ${{ secrets.CIVO_API_KEY }}
        run: |
          export PATH=$PATH:/root/.civo/bin
          civo kubernetes remove test-cluster --yes
