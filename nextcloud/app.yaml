apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod-nextcloud
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: ${EMAIL_ADDRESS}
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod-nextcloud
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class: traefik
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nc-pv-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: ${VOLUME_SIZE}
      
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nextcloud
spec:
  selector:
    matchLabels:
      app: nextcloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      containers:
      - image: nextcloud:31.0.4
        name: nextcloud
        ports:
        - containerPort: 80
          name: nextcloud
        volumeMounts:
        - name: nc-persistent-storage
          mountPath: /var/www/html/
      volumes:
      - name: nc-persistent-storage
        persistentVolumeClaim:
          claimName: nc-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
spec:
  ports:
  - name: "http-80"
    port: 80
    targetPort: 80
  selector:
    app: nextcloud
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod-nextcloud
    ingress.kubernetes.io/ssl-redirect: "true"  
  name: nextcloud
spec:
  tls:
    - hosts:
      - nextcloud.${CLUSTER_ID}.k8s.civo.com
      secretName: letsencrypt-prod-nextcloud  
  rules:
  - host: nextcloud.${CLUSTER_ID}.k8s.civo.com
    http:
      paths:
      - backend:
          serviceName: nextcloud
          servicePort: 80
